##!/bin/bash
# Task 5: Parallel Pokémon Data Retrieval with process management

POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
OUTPUT_DIR="pokemon_data"
API_URL="https://pokeapi.co/api/v2/pokemon"
ERROR_FILE="errors.txt"

mkdir -p "$OUTPUT_DIR"

fetch_pokemon() {
    local pokemon=$1
    if curl -s -f "$API_URL/$pokemon" -o "$OUTPUT_DIR/${pokemon}.json"; then
        echo "Saved data to $OUTPUT_DIR/${pokemon}.json ✅"
    else
        echo "[$(date '+%Y-%m-%d %H:%M:%S')] Failed to fetch $pokemon" >> "$ERROR_FILE"
    fi
}

# Launch fetches in background
for pokemon in "${POKEMON_LIST[@]}"; do
    echo "Fetching data for $pokemon..."
    fetch_pokemon "$pokemon" &
done

# Show running background jobs
echo "Current background jobs:"
jobs

# Example: Kill the last background job (for demonstration)
# Remove or adjust in real-world usage
kill %%

# Wait for remaining jobs to finish
wait
echo "All downloads completed."
